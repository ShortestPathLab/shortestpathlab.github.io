---
import Card from "@components/Card";
import { CardPublication } from "@components/PublicationCard";
import Footer from "@components/Footer.astro";
import Grid from "@components/Grid.astro";
import Header from "@components/Header.astro";
import SeeAllLink from "@components/SeeAllLink.astro";
import MemberCard from "@components/MemberCard.astro";
import WorkCard from "@components/WorkCard.astro";
import Layout from "@layouts/Layout.astro";
import getSortedPosts from "@utils/getSortedPosts";
import { getCollection } from "astro:content";
import { take } from "lodash-es";
import { getPublications } from "../content/getPublications";

const posts = await getCollection("blog");
const members = await getCollection("team");
const works = (await getCollection("projects")).filter(c => c.data.featured);
const publications = await getPublications();

const recentPosts = getSortedPosts(posts);
---

<Layout>
  <Header />
  <main id="main-content">
    <section id="hero">
      <p id="overline">ShortestPathLab @ Monash University</p>
      <h1>Industry-leading planning and heuristic search</h1>
      <p id="tagline">
        ShortestPathLab is a research group at Monash University led by A/Prof
        Daniel Harabor for AI planning and heuristic search.
      </p>
    </section>

    <section id="featured">
      <h2>
        Featured projects
        <div id="featured-gallery-controls">
          <button class="material-symbols-outlined left"
            >chevron_backward</button
          >
          <button class="material-symbols-outlined right"
            >chevron_forward</button
          >
        </div>
      </h2>
      <div>
        <ul class="flex flex-row gap-2">
          {
            works.map(work => (
              <div class="min-w-80">
                <WorkCard work={work} />
              </div>
            ))
          }
        </ul>
      </div>
      <SeeAllLink href="/projects" primary="See all projects" />
    </section>

    {
      recentPosts.length > 0 && (
        <section id="recent-posts">
          <h2>Recent posts</h2>
          <ul>
            {recentPosts.map(
              ({ data, slug }, index) =>
                index < 4 && (
                  <Card
                    href={`/posts/${slug}/`}
                    frontmatter={data}
                    secHeading={false}
                  />
                )
            )}
          </ul>
          <SeeAllLink primary="See all posts" href="/posts/" />
        </section>
      )
    }

    <section id="publications">
      <h2>Publications</h2>
      <ul>
        {
          take(publications, 3).map(c => (
            <CardPublication pub={c} client:idle />
          ))
        }
      </ul>
      <SeeAllLink href="/publications" primary="See all publications" />
    </section>

    <section id="team">
      <h2>Team</h2>
      <Grid width={280} class="my-8 justify-between gap-12">
        {members.map(c => <MemberCard member={c.data} />)}
      </Grid>
      <SeeAllLink primary="About the lab" href="/about/" />
    </section>
  </main>

  <Footer />
</Layout>

<style>
  /* ===== Hero Section ===== */
  #hero {
    @apply pb-12 pt-24 sm:pb-24 sm:pt-32;
  }
  #hero h1 {
    @apply my-2 inline-block text-2xl font-medium sm:my-2 sm:text-4xl;
  }
  #hero .rss-link {
    @apply mb-6;
  }
  #hero .rss-icon {
    @apply mb-2 h-6 w-6 scale-110 fill-skin-accent sm:mb-3 sm:scale-125;
  }
  #hero #overline {
    @apply max-w-xl text-sm font-medium opacity-70;
  }
  #hero #tagline {
    @apply my-12 max-w-xl font-medium;
  }
  .social-wrapper {
    @apply mt-4 flex flex-col sm:flex-row sm:items-center;
  }
  .social-links {
    @apply mb-1 mr-2 whitespace-nowrap sm:mb-0;
  }

  /* ===== Featured & Recent Posts Sections ===== */
  #featured,
  #recent-posts,
  #publications,
  #team {
    @apply pb-6 pt-12;
  }
  #featured h2,
  #publications h2,
  #recent-posts h2,
  #team h2 {
    @apply text-2xl font-medium;
  }

  #featured {
  }
  #featured > div {
    @apply mt-8 snap-x snap-mandatory overflow-x-scroll;
    width: calc(var(--vw, 1vw) * 100);
    margin-left: calc(50% - calc(var(--vw, 1vw) * 50));
    scroll-padding-left: calc(
      calc(calc(calc(var(--vw, 1vw) * 100) - min(64rem, 100%)) / 2) + 1rem
    );
    padding-right: calc(
      calc(calc(calc(var(--vw, 1vw) * 100) - min(64rem, 100%)) / 2) + 1rem
    );
  }
  #featured > div::-webkit-scrollbar {
    height: 0px;
  }
  #featured > div > ul {
    @apply w-fit;
    padding: 0 calc(64rem + 1rem);
  }

  #featured > div > ul > * {
    @apply snap-start;
  }
  #featured > h2 {
    @apply flex flex-row justify-between;
  }
  #featured-gallery-controls {
    @apply translate-y-1;
  }
  .all-posts-btn-wrapper {
    @apply my-8 text-center;
  }
</style>
<script data-astro-rerun>
  document.addEventListener("astro:page-load", () => {
    const box = document.querySelector("#featured > div");
    const elements = document.querySelectorAll("#featured > div > ul > *");
    box.addEventListener("scroll", () => {
      for (const elem of elements) {
        const a = elem.getBoundingClientRect();
        elem.style.setProperty("--in", `${1 - a.left ** 2}`);
      }
    });
    document
      .querySelector("#featured-gallery-controls > .left")
      .addEventListener("click", () => {
        box.scrollBy({ left: -320, behavior: "smooth" });
      });
    document
      .querySelector("#featured-gallery-controls > .right")
      .addEventListener("click", () => {
        box.scrollBy({ left: 320, behavior: "smooth" });
      });
  });
</script>
