---
import { LOGO_IMAGE, SITE } from "@config";

export interface Props {
  activeNav?:
    | "news"
    | "tags"
    | "about"
    | "publications"
    | "search"
    | "projects"
    | "team";
}

const { activeNav } = Astro.props;
const tabs = [
  { name: "Projects", key: "projects" },
  { name: "Publications", key: "publications" },
  { name: "News", key: "news" },
  { name: "People", key: "team" },
  { name: "About", key: "about" },
];
---

<header class="bg-skin-fill">
  <a id="skip-to-content" href="#main-content">Skip to content</a>
  <div class="nav-container">
    <div class="top-nav-wrap">
      <a href="/" class="logo whitespace-nowrap">
        {
          LOGO_IMAGE.enable ? (
            <img
              src={`/assets/${LOGO_IMAGE.svg ? "logo.svg" : "logo.png"}`}
              alt={SITE.title}
              width={LOGO_IMAGE.width}
              height={LOGO_IMAGE.height}
            />
          ) : (
            SITE.title
          )
        }
      </a>
      <nav id="nav-menu">
        <button
          class="hamburger-menu focus-outline material-symbols-outlined"
          aria-label="Open Menu"
          aria-expanded="false"
          aria-controls="menu-items"
        >
          menu
        </button>
        <div id="menu-items-wrapper">
          <ul id="menu-items" class="overflow-hidden sm:flex">
            {
              tabs.map(({ name, key }) => (
                <li>
                  <a
                    href={`/${key}/`}
                    class={activeNav === key ? "active" : ""}
                  >
                    {name}
                  </a>
                </li>
              ))
            }

            {
              SITE.lightAndDarkMode && (
                <li>
                  <button
                    id="theme-btn"
                    class="theme-btn focus-outline"
                    title="Toggles light & dark"
                    aria-label="auto"
                    aria-live="polite"
                  >
                    <span class="material-symbols-outlined" id="moon-svg">
                      dark_mode
                    </span>
                    <span class="material-symbols-outlined" id="sun-svg">
                      light_mode
                    </span>
                  </button>
                </li>
              )
            }
            <li>
              <a href="/search/" class="theme-btn focus-outline">
                <span class="material-symbols-outlined block">search</span>
              </a>
            </li>
          </ul>
        </div>
      </nav>
    </div>
  </div>
</header>

<style>
  #skip-to-content {
    @apply absolute -top-full left-16 z-50 bg-skin-accent px-3 py-2 text-skin-inverted transition-all focus:top-4;
  }
  .nav-container {
    @apply mx-auto flex max-w-5xl flex-col items-center justify-between sm:flex-row;
  }
  .top-nav-wrap {
    @apply relative flex w-full items-start justify-between p-4 sm:items-center sm:py-8;
  }
  .logo {
    @apply absolute py-1 text-lg font-medium sm:static;
  }
  .hamburger-menu {
    @apply self-end p-2 pr-0 sm:hidden;
  }
  .hamburger-menu svg {
    @apply h-6 w-6 scale-125 fill-skin-base;
  }

  nav {
    @apply flex w-full flex-col items-end sm:ml-2 sm:flex-row sm:justify-end sm:space-x-4 sm:py-0;
  }
  nav ul {
    @apply mt-4 grid w-44 grid-cols-2 grid-rows-4 gap-x-2 gap-y-2 sm:ml-0 sm:mt-0 sm:w-auto sm:gap-x-5 sm:gap-y-0;
  }
  nav ul li {
    @apply col-span-2 flex items-end justify-end overflow-y-hidden;
  }
  nav ul li a {
    @apply w-full px-0 py-3 text-right font-medium hover:text-skin-accent sm:my-0 sm:px-2 sm:py-1;
  }
  nav ul li:nth-last-child(2) a {
    @apply w-auto;
  }
  nav a.active {
    @apply underline decoration-2 underline-offset-4;
  }
  nav a.active svg {
    @apply fill-skin-accent;
  }

  nav button {
    @apply px-0 py-1 sm:px-1;
  }
  button span {
    @apply text-skin-base hover:text-skin-accent;
  }
  .theme-btn svg {
    @apply scale-125 hover:rotate-12 sm:scale-100;
  }

  .menu-icon line {
    @apply transition-opacity duration-75 ease-in-out;
  }
  .menu-icon .close {
    opacity: 0;
  }
  .menu-icon.is-active .line {
    @apply opacity-0;
  }
  .menu-icon.is-active .close {
    @apply opacity-100;
  }
  #menu-items-wrapper {
    @apply -mb-10 grid w-full grid-rows-[0fr] justify-stretch transition-[grid-template-rows] duration-500 ease-out sm:mb-0 sm:grid-rows-[1fr] sm:justify-end;
  }
  #menu-items-wrapper.open {
    @apply mb-0 grid-rows-[1fr]  after:mt-8 after:border-b after:border-current after:content-[''] after:sm:border-0 sm:after:content-none;
  }
  #menu-items {
    @apply w-full sm:w-fit;
  }
</style>

<script>
  function toggleNav() {
    // Toggle menu
    const menuBtn = document.querySelector(".hamburger-menu");
    const menuIcon = document.querySelector(".menu-icon");
    const menuItemsWrapper = document.querySelector("#menu-items-wrapper");

    menuBtn?.addEventListener("click", () => {
      const menuExpanded = menuBtn.getAttribute("aria-expanded") === "true";
      menuIcon?.classList.toggle("is-active");
      menuBtn.setAttribute("aria-expanded", menuExpanded ? "false" : "true");
      menuBtn.setAttribute(
        "aria-label",
        menuExpanded ? "Open Menu" : "Close Menu"
      );
      menuBtn.innerHTML = menuExpanded ? "menu" : "close";
      menuItemsWrapper?.classList.toggle("open");
    });
  }

  toggleNav();

  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", toggleNav);
</script>
